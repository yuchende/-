

题目：快乐数
	编写一个算法来判断一个数 n 是不是快乐数。
		「快乐数」定义为：对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和，然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。如果 可以变为  1，那么这个数就是快乐数。

		如果 n 是快乐数就返回 True ；不是，则返回 False 。

		 

		示例：

		输入：19
		输出：true
		解释：
		12 + 92 = 82
		82 + 22 = 68
		62 + 82 = 100
		12 + 02 + 02 = 1
	思路：
		1. 快慢指针
			58会出现环。
			若出现结果为1，则其所有结果依然为1.
			快慢指针方法。
		
		2.利用hash的方法
			public boolean isHappy(int n) {
				Set<Integer> seen = new HashSet<>();
				while (n != 1 && !seen.contains(n)) {
					seen.add(n);
					n = getNext(n);
				}
				return n == 1;
			}
		public boolean isHappy(int n) {
			if(n == 1){ return true;}
			int fast = n,slow = n;
			do{
				slow = getSum(slow); 
				fast = getSum(fast);
				fast = getSum(fast);
			}while(fast!=slow && slow !=1);
			return slow == 1;
		}
		
		
