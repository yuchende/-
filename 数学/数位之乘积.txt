


现给定任意正整数 n，请寻找并输出最小的正整数 m（m>9），使得 m 的各位（个位、十位、百位 … …）之乘积等于n，若不存在则输出 -1。

		输入例子1:
		36

		输出例子1:
		49

		输入例子2:
		100

		输出例子2:
		455

思路：
	
	这样分析 假设一个数按照规则的乘积刚好等于这个n
	
	a1 * a2 * a3 * a4 * a5 * a6  =  n
	那么 ai 的范围在  1 < ai <=9 
	n / a6 = a1 * a2 * a3 * a4 * a5 = k 数学等式
	
	ai 较大的数放在后面，较小的数放在高位
	故从9开始向前除取余，找到一个最大的地位数。
	
	也就是贪心，每个数放在后面
	



public class Solution {
    /**
     * 输入一个整形数值，返回一个整形值
     * @param n int整型 n>9
     * @return int整型
     */
     public int solution(int n){
        int res = resolve(n);
        if(res>0)
        {
            return res;
        }
        return -1;
    }
    public int resolve(int n)
    {
        if(n<10)
        {
            return n;
        }
        for (int i = 9; i >1 ; --i) {
            if(n%i == 0)
            {
                return resolve(n/i)*10+i;
            }
        }
        return -1;
    }
}
